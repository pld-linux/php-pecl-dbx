Index: package2.xml
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/xml
Index: package.xml
===================================================================
--- package.xml	(.../tags/RELEASE_1_1_0)
+++ package.xml	(.../trunk)
@@ -0,0 +1,133 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<package packagerversion="1.9.0" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0
+http://pear.php.net/dtd/tasks-1.0.xsd
+http://pear.php.net/dtd/package-2.0
+http://pear.php.net/dtd/package-2.0.xsd">
+ <name>dbx</name>
+ <channel>pecl.php.net</channel>
+ <summary>Database abstraction functions</summary>
+ <description>The dbx module is a database abstraction layer. The dbx functions allow
+you to access all supported databases using a single calling convention.
+The dbx-functions themselves do not interface directly to the databases,
+but interface to the modules that are used to support these databases.
+The currently supported databases are MySQL, ODBC, Oracle (oci8), MS SQL
+Server, PostgreSQL, FrontBase, Sybase-CT and SQLite. The
+module-dependencies are only for the databases you wish to use.
+
+ </description>
+ <lead>
+  <name>Marc Boeren</name>
+  <user>mboeren</user>
+  <email>marc@guidance.nl</email>
+  <active>yes</active>
+ </lead>
+ <developer>
+  <name>Rui Hirokawa</name>
+  <user>hirokawa</user>
+  <email>hirokawa@php.net</email>
+  <active>yes</active>
+ </developer>
+ <developer>
+  <name>Frank M. Kromann</name>
+  <user>fmk</user>
+  <email>frank@kromann.info</email>
+  <active>yes</active>
+ </developer>
+ <date>2009-11-05</date>
+ <time>17:27:47</time>
+ <version>
+  <release>1.1.0</release>
+  <api>1.1.0</api>
+ </version>
+ <stability>
+  <release>stable</release>
+  <api>stable</api>
+ </stability>
+ <license uri="http://www.php.net/license">PHP</license>
+ <notes>
+package.xml added to support intallation using pear installer
+ </notes>
+ <contents>
+  <dir name="/">
+   <dir name="tests">
+    <file name="001.phpt" role="test" />
+    <file name="002.phpt" role="test" />
+    <file name="003.phpt" role="test" />
+    <file name="004.phpt" role="test" />
+    <file name="005.phpt" role="test" />
+    <file name="006.phpt" role="test" />
+    <file name="007.phpt" role="test" />
+    <file name="008.phpt" role="test" />
+    <file name="009.phpt" role="test" />
+    <file name="010.phpt" role="test" />
+    <file name="dbx_test.p" role="test" />
+    <file name="dbx_test.pgsql.script" role="test" />
+    <file name="dbx_test.script" role="test" />
+    <file name="skipif.inc" role="test" />
+   </dir> <!-- //tests -->
+   <file name="config.m4" role="src" />
+   <file name="config.w32" role="src" />
+   <file name="CREDITS" role="doc" />
+   <file name="dbx.c" role="src" />
+   <file name="dbx.dsp" role="src" />
+   <file name="dbx.h" role="src" />
+   <file name="dbx_fbsql.c" role="src" />
+   <file name="dbx_fbsql.h" role="src" />
+   <file name="dbx_mssql.c" role="src" />
+   <file name="dbx_mssql.h" role="src" />
+   <file name="dbx_mysql.c" role="src" />
+   <file name="dbx_mysql.h" role="src" />
+   <file name="dbx_oci8.c" role="src" />
+   <file name="dbx_oci8.h" role="src" />
+   <file name="dbx_odbc.c" role="src" />
+   <file name="dbx_odbc.h" role="src" />
+   <file name="dbx_pgsql.c" role="src" />
+   <file name="dbx_pgsql.h" role="src" />
+   <file name="dbx_sqlite.c" role="src" />
+   <file name="dbx_sqlite.h" role="src" />
+   <file name="dbx_sybasect.c" role="src" />
+   <file name="dbx_sybasect.h" role="src" />
+   <file name="howto_extend_dbx.html" role="doc" />
+   <file name="INSTALL" role="doc" />
+   <file name="php_dbx.h" role="src" />
+  </dir> <!-- / -->
+ </contents>
+ <dependencies>
+  <required>
+   <php>
+    <min>4.2.0</min>
+   </php>
+   <pearinstaller>
+    <min>1.4.0b1</min>
+   </pearinstaller>
+  </required>
+  <optional>
+   <extension>
+    <name>mysql</name>
+   </extension>
+   <extension>
+    <name>odbc</name>
+   </extension>
+   <extension>
+    <name>pgsql</name>
+   </extension>
+   <extension>
+    <name>mssql</name>
+   </extension>
+   <extension>
+    <name>fbsql</name>
+   </extension>
+   <extension>
+    <name>oci8</name>
+   </extension>
+   <extension>
+    <name>sybase_ct</name>
+   </extension>
+   <extension>
+    <name>sqlite</name>
+   </extension>
+  </optional>
+ </dependencies>
+ <providesextension>dbx</providesextension>
+ <extsrcrelease />
+</package>

Property changes on: package.xml
___________________________________________________________________
Added: cvs2svn:cvs-rev
   + 1.7

Index: dbx.c
===================================================================
--- dbx.c	(.../tags/RELEASE_1_1_0)
+++ dbx.c	(.../trunk)
@@ -52,6 +52,16 @@
 #include "dbx_sybasect.h"
 #include "dbx_sqlite.h"
 
+#ifndef Z_ADDREF_P
+# define Z_ADDREF_P(pz) (pz)->refcount++;
+# define Z_ADDREF_PP(ppz) Z_ADDREF_P(*(ppz))
+#endif
+
+#ifndef Z_SET_ISREF_P
+# define Z_SET_ISREF_P(pz) (pz)->is_ref = 1;
+# define Z_SET_ISREF_PP(ppz) Z_SET_ISREF_P(*(ppz))
+#endif
+
 /* support routines */
 int module_exists(char *module_name)
 {
@@ -159,7 +169,7 @@
 
 /* Every user visible function must have an entry in dbx_functions[].
 */
-function_entry dbx_functions[] = {
+zend_function_entry dbx_functions[] = {
 	ZEND_FE(dbx_connect,	NULL)
 	ZEND_FE(dbx_close,		NULL)
 	ZEND_FE(dbx_query,		NULL)
@@ -182,7 +192,7 @@
 	NULL, /*ZEND_RINIT(dbx),         Replace with NULL if there's nothing to do at request start */
 	NULL, /*ZEND_RSHUTDOWN(dbx),     Replace with NULL if there's nothing to do at request end */
 	ZEND_MINFO(dbx),
-	NO_VERSION_YET,
+	PHP_DBX_VERSION,
 	STANDARD_MODULE_PROPERTIES
 };
 
@@ -246,8 +256,8 @@
 ZEND_MINFO_FUNCTION(dbx)
 {
 	php_info_print_table_start();
-	php_info_print_table_row(2, "dbx support", "enabled");
-	php_info_print_table_row(2, "dbx version", "1.1.0");
+	php_info_print_table_header(2, "dbx support", "enabled");
+	php_info_print_table_row(2, "dbx version", PHP_DBX_VERSION);
 	php_info_print_table_row(2, "supported databases", "MySQL\nODBC\nPostgreSQL\nMicrosoft SQL Server\nFrontBase\nOracle 8 (oci8)\nSybase-CT\nSQLite");
 	php_info_print_table_end();
 	DISPLAY_INI_ENTRIES();
@@ -532,8 +542,8 @@
 					for (col_index=0; col_index<Z_LVAL_P(rv_column_count); ++col_index) {
 						zend_hash_index_find(Z_ARRVAL_PP(inforow_ptr), col_index, (void **) &columnname_ptr);
 						zend_hash_index_find(Z_ARRVAL_PP(row_ptr), col_index, (void **) &actual_ptr);
-						(*actual_ptr)->refcount+=1;
-						(*actual_ptr)->is_ref=1;
+						Z_ADDREF_PP(actual_ptr);
+						Z_SET_ISREF_PP(actual_ptr);
 						zend_hash_update(Z_ARRVAL_PP(row_ptr), Z_STRVAL_PP(columnname_ptr), Z_STRLEN_PP(columnname_ptr) + 1, actual_ptr, sizeof(zval *), NULL);
 					}
 				}
@@ -606,8 +616,8 @@
 			for (col_index=0; col_index<col_count; ++col_index) {
 				zend_hash_index_find(Z_ARRVAL_PP(inforow_ptr), col_index, (void **) &columnname_ptr);
 				zend_hash_index_find(Z_ARRVAL_P(return_value), col_index, (void **) &actual_ptr);
-				(*actual_ptr)->refcount+=1;
-				(*actual_ptr)->is_ref=1;
+				Z_ADDREF_PP(actual_ptr);
+				Z_SET_ISREF_PP(actual_ptr);
 				zend_hash_update(Z_ARRVAL_P(return_value), Z_STRVAL_PP(columnname_ptr), Z_STRLEN_PP(columnname_ptr) + 1, actual_ptr, sizeof(zval *), NULL);
 			}
 		}

Property changes on: dbx.c
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.57
   + 1.58

Index: tests/007.phpt
===================================================================
--- tests/007.phpt	(.../tags/RELEASE_1_1_0)
+++ tests/007.phpt	(.../trunk)
@@ -1,60 +1,63 @@
 --TEST--
 dbx_sort
 --SKIPIF--
-<?php 
+<?php
 include_once("skipif.inc");
 ?>
 --FILE--
-<?php 
+<?php
 include_once("dbx_test.p");
 $sql_statement = "select id, description from tbl where parentid=1 order by id";
 $compare_function = "cmp";
 $invalid_compare_function = "invalid_cmp";
 $nonexisting_compare_function = "nonexisting_cmp";
 $dlo = dbx_connect($module, $host, $database, $username, $password);
-function invalid_cmp() {
-    return "blabla";
-    }
-function cmp($a, $b) {
-    $rv = dbx_compare($a, $b, "description");
-    if (!$rv) $rv = dbx_compare($a, $b, "id");
-    return $rv;
-    }
+function invalid_cmp()
+{
+	return "blabla";
+}
+
+function cmp($a, $b)
+{
+	$rv = dbx_compare($a, $b, "description");
+	if (!$rv) $rv = dbx_compare($a, $b, "id");
+	return $rv;
+}
+
 if (!$dlo) {
-    print('this won\'t work'."\n");
+	print('this won\'t work'."\n");
+} else {
+	$dro = dbx_query($dlo, $sql_statement);
+	if (!$dro) {
+		print('this won\'t work'."\n");
 	}
-else {
-    $dro = dbx_query($dlo, $sql_statement);
-    if (!$dro) {
-        print('this won\'t work'."\n");
-        }
-    for ($i=0; $i<$dro->rows; ++$i) {
-        print($dro->data[$i]['id'].".".$dro->data[$i]['description']."\n");
-        }
-    if (dbx_sort($dro, $compare_function)) {
-        for ($i=0; $i<$dro->rows; ++$i) {
-            print($dro->data[$i]['id'].".".$dro->data[$i]['description']."\n");
-            }
-        }
-    if (!@dbx_sort(0, $compare_function)) {
-        print('wrong dbx_result_object: dbx_sort failure works ok'."\n");
-        }
-    if (dbx_sort($dro, $nonexisting_compare_function)) {
-        print('nonexisting compare function: dbx_sort will NOT complain'."\n");
-        }
-    if (dbx_sort($dro, $invalid_compare_function)) {
-        print('invalid compare function: dbx_sort will NOT complain'."\n");
-        }
-    if (!@dbx_sort($dro, $compare_function, "12many")) {
-        print('too many parameters: dbx_sort failure works ok'."\n");
-        }
-    if (!@dbx_sort($dro)) {
-        print('too few parameters: dbx_sort failure works ok'."\n");
-        }
-    dbx_close($dlo);
-    }
+	for ($i=0; $i<$dro->rows; ++$i) {
+		print($dro->data[$i]['id'].".".$dro->data[$i]['description']."\n");
+	}
+	if (dbx_sort($dro, $compare_function)) {
+		for ($i=0; $i<$dro->rows; ++$i) {
+			print($dro->data[$i]['id'].".".$dro->data[$i]['description']."\n");
+		}
+	}
+	if (!@dbx_sort(0, $compare_function)) {
+		print('wrong dbx_result_object: dbx_sort failure works ok'."\n");
+	}
+	if (dbx_sort($dro, $nonexisting_compare_function)) {
+		print('nonexisting compare function: dbx_sort should complain'."\n");
+	}
+	if (dbx_sort($dro, $invalid_compare_function)) {
+		print('invalid compare function: dbx_sort will NOT complain'."\n");
+	}
+	if (!@dbx_sort($dro, $compare_function, "12many")) {
+		print('too many parameters: dbx_sort failure works ok'."\n");
+	}
+	if (!@dbx_sort($dro)) {
+		print('too few parameters: dbx_sort failure works ok'."\n");
+	}
+	dbx_close($dlo);
+}
 ?>
---EXPECT--
+--EXPECTF--
 10.abc
 20.cba
 30.bac
@@ -68,7 +71,9 @@
 30.bac
 20.cba
 wrong dbx_result_object: dbx_sort failure works ok
-nonexisting compare function: dbx_sort will NOT complain
+
+Warning: usort(): Invalid comparison function. in %s007.php on line %d
+nonexisting compare function: dbx_sort should complain
 invalid compare function: dbx_sort will NOT complain
 too many parameters: dbx_sort failure works ok
 too few parameters: dbx_sort failure works ok
\ No newline at end of file

Property changes on: tests/007.phpt
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.5
   + 1.6

Index: tests/dbx_test.p
===================================================================
--- tests/dbx_test.p	(.../tags/RELEASE_1_1_0)
+++ tests/dbx_test.p	(.../trunk)
@@ -2,7 +2,7 @@
 // set the $connection to match your test-database setup
 // (possibly change the rest of the settings too)
 // e.g. $connection = DBX_MYSQL;
-$connection = NULL;
+$connection = DBX_MYSQL;
 switch ($connection) {
     case DBX_MYSQL:
         $module=DBX_MYSQL;

Property changes on: tests/dbx_test.p
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.11
   + 1.12

Index: tests/003.phpt
===================================================================
--- tests/003.phpt	(.../tags/RELEASE_1_1_0)
+++ tests/003.phpt	(.../trunk)
@@ -11,12 +11,12 @@
 $nonexisting_username="nonexisting_username";
 $nonexisting_password="nonexisting_password";
 $dlo = dbx_connect($module_name, $host, $database, $username, $password);
-if ($dlo!=0) {
+if ($dlo) {
 	print('connect using string ok'."\n");
 	dbx_close($dlo);
 	}
 $dlo = dbx_connect($module, $host, $database, $username, $password);
-if ($dlo!=0) {
+if ($dlo) {
 	print('connect using constant ok'."\n");
 	dbx_close($dlo);
 	}
@@ -26,7 +26,7 @@
     }
 else {
     $dlo = @dbx_connect($module, $host, $nonexisting_database, $username, $password);
-    if ($dlo==0) {
+    if (!$dlo) {
         print('connect to non-existing database failed, so it\'s ok'."\n");
         }
     else {
@@ -40,7 +40,7 @@
     }
 else {
     $dlo = @dbx_connect($module, $host, $database, $nonexisting_username, $nonexisting_password);
-    if ($dlo==0) {
+    if (!$dlo) {
         print('connect with false username/password combi failed, so it\'s ok'."\n");
         }
     else {
@@ -50,12 +50,12 @@
     }
 
 $dlo = dbx_connect($module_name, $host, $database, $username, $password, DBX_PERSISTENT);
-if ($dlo!=0) {
+if ($dlo) {
 	print('persistent connect using string ok'."\n");
 	dbx_close($dlo);
 	}
 $dlo = dbx_connect($module, $host, $database, $username, $password, DBX_PERSISTENT);
-if ($dlo!=0) {
+if ($dlo) {
 	print('persistent connect using constant ok'."\n");
 	dbx_close($dlo);
 	}
@@ -65,7 +65,7 @@
     }
 else {
     $dlo = @dbx_connect($module, $host, $nonexisting_database, $username, $password, DBX_PERSISTENT);
-    if ($dlo==0) {
+    if (!$dlo) {
         print('persistent connect to non-existing database failed, so it\'s ok'."\n");
         }
     else {
@@ -79,7 +79,7 @@
     }
 else {
     $dlo = @dbx_connect($module, $host, $database, $nonexisting_username, $nonexisting_password, DBX_PERSISTENT);
-    if ($dlo==0) {
+    if (!$dlo) {
         print('persistent connect with false username/password combi failed, so it\'s ok'."\n");
         }
     else {
@@ -97,7 +97,7 @@
 	dbx_close($dlo);
     }
 $dlo = @dbx_connect($module, $host, $database, $username);
-if ($dlo==0) {
+if (!$dlo) {
 	print('too few parameters: connect failure works ok'."\n");
 	}
 else {
@@ -106,7 +106,7 @@
     }
 $dlo1 = dbx_connect($module, $host, $database, $username, $password);
 $dlo2 = dbx_connect($module, $host, $database, $username, $password);
-if ($dlo1!=0 && $dlo2!=0) {
+if ($dlo1 && $dlo2) {
 	print('multiple connects ok'."\n");
 	dbx_close($dlo1);
 	dbx_close($dlo2);
@@ -118,7 +118,7 @@
 else {
     $dlo1 = dbx_connect($module, $host, $database, $username, $password);
     $dlo2 = @dbx_connect($module, $host, $nonexisting_database, $username, $password);
-    if ($dlo1!=0 && $dlo2==0) {
+    if ($dlo1 && !$dlo2) {
         print('multiple connects (2nd fails on database-name) ok'."\n");
         dbx_close($dlo1);
         }

Property changes on: tests/003.phpt
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.7
   + 1.8

Index: tests/004.phpt
===================================================================
--- tests/004.phpt	(.../tags/RELEASE_1_1_0)
+++ tests/004.phpt	(.../trunk)
@@ -12,7 +12,7 @@
     print('close works ok'."\n");
     }
 else {
-    if ($dlo!=0) {
+    if ($dlo) {
         if (dbx_close($dlo)) {
             print('close works ok'."\n");
             }

Property changes on: tests/004.phpt
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.5
   + 1.6


Property changes on: tests
___________________________________________________________________
Added: svn:ignore
   + phpt.*
*.mem
*.diff
*.log
*.exp
*.out
*.php
*.gcda
*.gcno


Index: dbx.h
===================================================================
--- dbx.h	(.../tags/RELEASE_1_1_0)
+++ dbx.h	(.../trunk)
@@ -29,6 +29,10 @@
 #include "zend_modules.h"
 #endif
 
+#ifdef HAVE_CONFIG_H
+# include "config.h"
+#endif
+
 #include "php.h"
 #include "ext/standard/php_string.h"
 
Index: php_dbx.h
===================================================================
--- php_dbx.h	(.../tags/RELEASE_1_1_0)
+++ php_dbx.h	(.../trunk)
@@ -32,6 +32,8 @@
 extern zend_module_entry dbx_module_entry;
 #define phpext_dbx_ptr &dbx_module_entry
 
+#define PHP_DBX_VERSION "1.1.1-dev"
+
 #ifdef ZEND_WIN32
 #define ZEND_DBX_API __declspec(dllexport)
 #else

Property changes on: php_dbx.h
___________________________________________________________________
Modified: cvs2svn:cvs-rev
   - 1.19
   + 1.20


Property changes on: .
___________________________________________________________________
Added: svn:ignore
   + #*#
*.dsw
*.la
*.lo
*.ncb
*.opt
*.plg
*.tgz
*~
.#*
.deps
.libs
Debug
Debug_TS
Makefile
Makefile.fragments
Makefile.global
Makefile.objects
Release
Release_TS
Release_TSDbg
Release_TS_inline
Release_inline
acinclude.m4
aclocal.m4
autom4te.cache
build
config.cache
config.guess
config.h
config.h.in
config.log
config.nice
config.status
config.sub
configure
configure.in
conftest
conftest.c
include
install-sh
libtool
ltmain.sh
missing
mkinstalldirs
modules
scan_makefile_in.awk
*.gcda
*.gcno


